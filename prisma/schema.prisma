generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                 String     @id @default(cuid())
  name               String?
  email              String?    @unique
  emailVerified      DateTime?
  image              String?
  accounts           Account[]
  sessions           Session[]
  savedArticles      Article[]
  savedCategories    Category[]
  dislikedCategories Category[] @relation("DislikedCategories")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Category {
  id          String    @id @default(uuid())
  type        String
  lastUpdated DateTime  @default(now())
  articles    Article[]
  savedBy     User[]
  dislikedBy  User[]    @relation("DislikedCategories")
}

model Article {
  id          String     @id @default(uuid())
  insertedAt  DateTime   @default(now())
  author      String
  title       String     @unique
  description String?
  content     String?
  url         String
  urlToImage  String?
  publishedAt DateTime
  sourceId    String?
  sourceName  String?
  categories  Category[]
  savedBy     User[]
}

model ApiUsageTracker {
  id          String   @id @default(uuid())
  name        String   @unique
  calls       Int      @default(0)
  lastUsed    DateTime @default(now())
  maxRequests Int      @default(250)
}
